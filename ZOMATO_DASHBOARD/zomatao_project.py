# -*- coding: utf-8 -*-
"""ZOMATAO_PROJECT.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YozCEoWrYDEET96bOdvqht_bzmmHtJQ7
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from google.colab import files

# ============================================
# 1. Upload the dataset
# ============================================
uploaded = files.upload()  # Upload zomato.csv
df = pd.read_csv("zomato.csv", encoding="latin-1")

print("Initial Shape:", df.shape)

# ============================================
# 2. Remove duplicates
# ============================================
df = df.drop_duplicates()

# ============================================
# 3. Remove rows with missing values in key fields
# ============================================
important_cols = ["Cuisines", "City", "Aggregate rating", "Votes"]
df = df.dropna(subset=important_cols)

# ============================================
# 4. Remove unwanted columns
# ============================================
cols_to_remove = [
    "Address",
    "Locality Verbose",
    "Switch to order menu",
    "Country Code",
    "Longitude",
    "Latitude"
]
df = df.drop(columns=cols_to_remove, errors='ignore')

# ============================================
# 5. Strip extra spaces from text columns
# ============================================
str_cols = df.select_dtypes(include="object").columns
df[str_cols] = df[str_cols].apply(lambda x: x.str.strip())

# ============================================
# 6. Quick EDA Visualizations
# ============================================

# Top 10 Cuisines
plt.figure(figsize=(10,5))
df['Cuisines'].value_counts().head(10).plot(kind='bar', color='skyblue')
plt.title("Top 10 Cuisines")
plt.xticks(rotation=45)
plt.show()

# Rating distribution
plt.figure(figsize=(8,5))
sns.histplot(df['Aggregate rating'], bins=20, kde=True, color='orange')
plt.title("Rating Distribution")
plt.show()

# Votes vs Rating
plt.figure(figsize=(8,5))
sns.scatterplot(x='Aggregate rating', y='Votes', data=df, alpha=0.5)
plt.title("Votes vs Aggregate Rating")
plt.show()

# Price Range distribution
plt.figure(figsize=(6,4))
sns.countplot(x='Price range', data=df, palette='viridis')
plt.title("Price Range Distribution")
plt.show()

# ============================================
# 7. Save cleaned file
# ============================================
df.to_csv("zomato_cleaned.csv", index=False)
files.download("zomato_cleaned.csv")

print("Final Shape after cleaning:", df.shape)
print("Columns in cleaned dataset:", df.columns.tolist())

